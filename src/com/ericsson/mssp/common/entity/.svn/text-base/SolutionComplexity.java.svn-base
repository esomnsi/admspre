package com.ericsson.mssp.common.entity;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SolutionComplexity generated by hbm2java
 */
@Entity
@Table(name = "SolutionComplexity")
public class SolutionComplexity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2405009847105844623L;
	private Integer solutionComplexityId;
	private Solution solution;
	private Short skillRating;
	private Short regionRating;
	private Short auditRating;
	private Short slarating;
	private Short skillWeightage;
	private Short regionWeightage;
	private Short auditWeightage;
	private Short slaweightage;
	private Short computedComplexity;
	private Short overriddenComplexity;
	private Float complexityAdjustor;
	private Float contingencyEffort;
//	private Set<Apacomplexity> apacomplexities = new HashSet<Apacomplexity>(0);

	public SolutionComplexity() {
	}

	public SolutionComplexity(Solution solution) {
		this.solution = solution;
	}

	public SolutionComplexity(Solution solution, Short skillRating,
			Short regionRating, Short auditRating, Short slarating,
			Short skillWeightage, Short regionWeightage, Short auditWeightage,
			Short slaweightage, Short computedComplexity,
			Short overriddenComplexity, Float complexityAdjustor,
			Float contingencyEffort, Set<Apacomplexity> apacomplexities) {
		this.solution = solution;
		this.skillRating = skillRating;
		this.regionRating = regionRating;
		this.auditRating = auditRating;
		this.slarating = slarating;
		this.skillWeightage = skillWeightage;
		this.regionWeightage = regionWeightage;
		this.auditWeightage = auditWeightage;
		this.slaweightage = slaweightage;
		this.computedComplexity = computedComplexity;
		this.overriddenComplexity = overriddenComplexity;
		this.complexityAdjustor = complexityAdjustor;
		this.contingencyEffort = contingencyEffort;
//		this.apacomplexities = apacomplexities;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "SolutionComplexityID", unique = true, nullable = false)
	public Integer getSolutionComplexityId() {
		return this.solutionComplexityId;
	}

	public void setSolutionComplexityId(Integer solutionComplexityId) {
		this.solutionComplexityId = solutionComplexityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SolutionID", nullable = false)
	public Solution getSolution() {
		return this.solution;
	}

	public void setSolution(Solution solution) {
		this.solution = solution;
	}

	@Column(name = "SkillRating")
	public Short getSkillRating() {
		return this.skillRating;
	}

	public void setSkillRating(Short skillRating) {
		this.skillRating = skillRating;
	}

	@Column(name = "RegionRating")
	public Short getRegionRating() {
		return this.regionRating;
	}

	public void setRegionRating(Short regionRating) {
		this.regionRating = regionRating;
	}

	@Column(name = "AuditRating")
	public Short getAuditRating() {
		return this.auditRating;
	}

	public void setAuditRating(Short auditRating) {
		this.auditRating = auditRating;
	}

	@Column(name = "SLARating")
	public Short getSlarating() {
		return this.slarating;
	}

	public void setSlarating(Short slarating) {
		this.slarating = slarating;
	}

	@Column(name = "SkillWeightage")
	public Short getSkillWeightage() {
		return this.skillWeightage;
	}

	public void setSkillWeightage(Short skillWeightage) {
		this.skillWeightage = skillWeightage;
	}

	@Column(name = "RegionWeightage")
	public Short getRegionWeightage() {
		return this.regionWeightage;
	}

	public void setRegionWeightage(Short regionWeightage) {
		this.regionWeightage = regionWeightage;
	}

	@Column(name = "AuditWeightage")
	public Short getAuditWeightage() {
		return this.auditWeightage;
	}

	public void setAuditWeightage(Short auditWeightage) {
		this.auditWeightage = auditWeightage;
	}

	@Column(name = "SLAWeightage")
	public Short getSlaweightage() {
		return this.slaweightage;
	}

	public void setSlaweightage(Short slaweightage) {
		this.slaweightage = slaweightage;
	}

	@Column(name = "ComputedComplexity")
	public Short getComputedComplexity() {
		return this.computedComplexity;
	}

	public void setComputedComplexity(Short computedComplexity) {
		this.computedComplexity = computedComplexity;
	}

	@Column(name = "OverriddenComplexity")
	public Short getOverriddenComplexity() {
		return this.overriddenComplexity;
	}

	public void setOverriddenComplexity(Short overriddenComplexity) {
		this.overriddenComplexity = overriddenComplexity;
	}

	@Column(name = "ComplexityAdjustor", precision = 10)
	public Float getComplexityAdjustor() {
		return this.complexityAdjustor;
	}

	public void setComplexityAdjustor(Float complexityAdjustor) {
		this.complexityAdjustor = complexityAdjustor;
	}

	@Column(name = "ContingencyEffort", precision = 10)
	public Float getContingencyEffort() {
		return this.contingencyEffort;
	}

	public void setContingencyEffort(Float contingencyEffort) {
		this.contingencyEffort = contingencyEffort;
	}
/*
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solutionComplexity")
	public Set<Apacomplexity> getApacomplexities() {
		return this.apacomplexities;
	}

	public void setApacomplexities(Set<Apacomplexity> apacomplexities) {
		this.apacomplexities = apacomplexities;
	}
*/
}