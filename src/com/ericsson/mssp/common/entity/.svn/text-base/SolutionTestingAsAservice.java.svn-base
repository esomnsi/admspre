package com.ericsson.mssp.common.entity;

// Generated Apr 22, 2013 12:50:49 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * SolutionTestingAsAservice generated by hbm2java
 */
@Entity
@Table(name = "SolutionTestingAsAService")
public class SolutionTestingAsAservice implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -7637775729424758116L;
    private Integer solutionTestingAsAserviceId;
    private Solution solution;
    private SolutionApproachDimension solutionApproachDimension;
    private OpportunityScope opportunityScope;
    private Float fte;
    private Integer percentOfServiceElementEffort;

    public SolutionTestingAsAservice() {
    }

    public SolutionTestingAsAservice(Solution solution,
	    SolutionApproachDimension solutionApproachDimension,
	    OpportunityScope opportunityScope, Float fte) {
	this.solution = solution;
	this.solutionApproachDimension = solutionApproachDimension;
	this.opportunityScope = opportunityScope;
	this.fte = fte;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "SolutionTestingAsAServiceID", unique = true, nullable = false)
    public Integer getSolutionTestingAsAserviceId() {
	return this.solutionTestingAsAserviceId;
    }

    public void setSolutionTestingAsAserviceId(
	    Integer solutionTestingAsAserviceId) {
	this.solutionTestingAsAserviceId = solutionTestingAsAserviceId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "SolutionID")
    public Solution getSolution() {
	return this.solution;
    }

    public void setSolution(Solution solution) {
	this.solution = solution;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "SolutionApproachDimensionID")
    public SolutionApproachDimension getSolutionApproachDimension() {
	return this.solutionApproachDimension;
    }

    public void setSolutionApproachDimension(
	    SolutionApproachDimension solutionApproachDimension) {
	this.solutionApproachDimension = solutionApproachDimension;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "OpportunityScopeID")
    public OpportunityScope getOpportunityScope() {
	return this.opportunityScope;
    }

    public void setOpportunityScope(OpportunityScope opportunityScope) {
	this.opportunityScope = opportunityScope;
    }

    @Column(name = "FTE", precision = 10)
    public Float getFte() {
	return this.fte;
    }

    public void setFte(Float fte) {
	this.fte = fte;
    }

	public Integer getPercentOfServiceElementEffort() {
		return percentOfServiceElementEffort;
	}

	public void setPercentOfServiceElementEffort(
			Integer percentOfServiceElementEffort) {
		this.percentOfServiceElementEffort = percentOfServiceElementEffort;
	}

}
