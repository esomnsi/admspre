package com.ericsson.mssp.common.entity;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SolutionLever generated by hbm2java
 */
@Entity
@Table(name = "SolutionLever")
public class SolutionLever implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8666490451594646397L;
	private Integer solutionLeverId;
	private Solution solution;
	private String solutionLeverApproach;
	private String productivityType;
	private String yearType;
	
	private Set<LocationBreakup> locationBreakups = new HashSet<LocationBreakup>(0);
	private Set<LocationPyramid> locationPyramids = new HashSet<LocationPyramid>(0);
	private Set<ProductivityLever> productivityLevers = new HashSet<ProductivityLever>(0);

	public SolutionLever() {
	}

	public SolutionLever(Solution solution) {
		this.solution = solution;
	}

	public SolutionLever(Solution solution, String solutionLeverApproach,
			Set<LocationBreakup> locationBreakups, Set<LocationPyramid> locationPyramids, Set<ProductivityLever> productivityLevers) {
		this.solution = solution;
		this.solutionLeverApproach = solutionLeverApproach;
		this.locationBreakups = locationBreakups;
		this.locationPyramids = locationPyramids;
		this.productivityLevers = productivityLevers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "SolutionLeverID", unique = true, nullable = false)
	public Integer getSolutionLeverId() {
		return this.solutionLeverId;
	}

	public void setSolutionLeverId(Integer solutionLeverId) {
		this.solutionLeverId = solutionLeverId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SolutionID", nullable = false)
	public Solution getSolution() {
		return this.solution;
	}

	public void setSolution(Solution solution) {
		this.solution = solution;
	}

	@Column(name = "SolutionLeverApproach", length = 20)
	public String getSolutionLeverApproach() {
		return this.solutionLeverApproach;
	}

	public void setSolutionLeverApproach(String solutionLeverApproach) {
		this.solutionLeverApproach = solutionLeverApproach;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solutionLever")
	public Set<LocationBreakup> getLocationBreakups() {
		return this.locationBreakups;
	}

	public void setLocationBreakups(Set<LocationBreakup> locationBreakups) {
		this.locationBreakups = locationBreakups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solutionLever")
	public Set<LocationPyramid> getLocationPyramids() {
		return this.locationPyramids;
	}

	public void setLocationPyramids(Set<LocationPyramid> locationPyramids) {
		this.locationPyramids = locationPyramids;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solutionLever")
	public Set<ProductivityLever> getProductivityLevers() {
		return this.productivityLevers;
	}

	public void setProductivityLevers(Set<ProductivityLever> productivityLevers) {
		this.productivityLevers = productivityLevers;
	}

	
	@Column(name = "ProductivityType", length = 20)
	public String getProductivityType() {
		return productivityType;
	}

	public void setProductivityType(String productivityType) {
		this.productivityType = productivityType;
	}
	
	@Column(name = "YearType", length = 20)
	public String getYearType() {
		return yearType;
	}

	public void setYearType(String yearType) {
		this.yearType = yearType;
	}
	
}
