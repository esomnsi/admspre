package com.ericsson.mssp.common.entity;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OpportunityScope generated by hbm2java
 */
@Entity
@Table(name = "OpportunityScope")
public class OpportunityScope implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5438856337112203780L;
	private Integer opportunityScopeId;
	private ServiceScope serviceScope;
	private Opportunity opportunity;
	private Set<ProductivityLever> productivityLevers = new HashSet<ProductivityLever>(0);
	private Set<LocationBreakup> locationBreakups = new HashSet<LocationBreakup>(0);
	private Set<FTEStaging> ftestagings = new HashSet<FTEStaging>(0);
	private Set<Apacomplexity> apacomplexities = new HashSet<Apacomplexity>(0);
	private Set<LocationPyramid> locationPyramids = new HashSet<LocationPyramid>(0);
	private Set<FTESummary> ftesummaries = new HashSet<FTESummary>(0);
	private Set<SolutionAPA> solutionApas = new HashSet<SolutionAPA>(0);
	private Set<CostSummary> costSummaries = new HashSet<CostSummary>(0);

	public OpportunityScope() {
	}

	public OpportunityScope(ServiceScope serviceScope, Opportunity opportunity) {
		this.serviceScope = serviceScope;
		this.opportunity = opportunity;
	}

	public OpportunityScope(ServiceScope serviceScope, Opportunity opportunity,
			Set<ProductivityLever> productivityLevers, Set<LocationBreakup> locationBreakups, Set<FTEStaging> ftestagings,
			Set<Apacomplexity> apacomplexities, Set<LocationPyramid> locationPyramids, Set<FTESummary> ftesummaries,
			Set<SolutionAPA> solutionApas, Set<CostSummary> costSummaries) {
		this.serviceScope = serviceScope;
		this.opportunity = opportunity;
		this.productivityLevers = productivityLevers;
		this.locationBreakups = locationBreakups;
		this.ftestagings = ftestagings;
		this.apacomplexities = apacomplexities;
		this.locationPyramids = locationPyramids;
		this.ftesummaries = ftesummaries;
		this.solutionApas = solutionApas;
		this.costSummaries = costSummaries;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "OpportunityScopeID", unique = true, nullable = false)
	public Integer getOpportunityScopeId() {
		return this.opportunityScopeId;
	}

	public void setOpportunityScopeId(Integer opportunityScopeId) {
		this.opportunityScopeId = opportunityScopeId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ServiceScopeID", nullable = false)
	public ServiceScope getServiceScope() {
		return this.serviceScope;
	}

	public void setServiceScope(ServiceScope serviceScope) {
		this.serviceScope = serviceScope;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OpportunityID", nullable = false)
	public Opportunity getOpportunity() {
		return this.opportunity;
	}

	public void setOpportunity(Opportunity opportunity) {
		this.opportunity = opportunity;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope", cascade=CascadeType.REMOVE)
	public Set<ProductivityLever> getProductivityLevers() {
		return this.productivityLevers;
	}

	public void setProductivityLevers(Set<ProductivityLever> productivityLevers) {
		this.productivityLevers = productivityLevers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope", cascade=CascadeType.REMOVE)
	public Set<LocationBreakup> getLocationBreakups() {
		return this.locationBreakups;
	}

	public void setLocationBreakups(Set<LocationBreakup> locationBreakups) {
		this.locationBreakups = locationBreakups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope")
	public Set<FTEStaging> getFtestagings() {
		return this.ftestagings;
	}

	public void setFtestagings(Set<FTEStaging> ftestagings) {
		this.ftestagings = ftestagings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope", cascade=CascadeType.REMOVE)
	public Set<Apacomplexity> getApacomplexities() {
		return this.apacomplexities;
	}

	public void setApacomplexities(Set<Apacomplexity> apacomplexities) {
		this.apacomplexities = apacomplexities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope")
	public Set<LocationPyramid> getLocationPyramids() {
		return this.locationPyramids;
	}

	public void setLocationPyramids(Set<LocationPyramid> locationPyramids) {
		this.locationPyramids = locationPyramids;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope", cascade=CascadeType.REMOVE)
	public Set<FTESummary> getFtesummaries() {
		return this.ftesummaries;
	}

	public void setFtesummaries(Set<FTESummary> ftesummaries) {
		this.ftesummaries = ftesummaries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope" , cascade=CascadeType.REMOVE)
	public Set<SolutionAPA> getSolutionApas() {
		return this.solutionApas;
	}

	public void setSolutionApas(Set<SolutionAPA> solutionApas) {
		this.solutionApas = solutionApas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "opportunityScope", cascade=CascadeType.REMOVE)
	public Set<CostSummary> getCostSummaries() {
		return this.costSummaries;
	}

	public void setCostSummaries(Set<CostSummary> costSummaries) {
		this.costSummaries = costSummaries;
	}

}
