package com.ericsson.mssp.common.entity;

//Generated Apr 29, 2014 11:53:09 AM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
* ProgramManagement generated by hbm2java
*/
@Entity
@Table(name="ProgramManagement")
@NamedQueries(value = { @NamedQuery(name = "get.ProgramManagement.bySolutionID", query = "from ProgramManagement where SolutionID = ?")	})
public class ProgramManagement implements java.io.Serializable {
	
	private Integer programManagementID;
	private Solution solution;
	private OpportunityScope opportunityScope;
	private float coordinateProjects;
	private float ensureAchievement;
	private float manageClient;
	private float manageQualityRiskIssues;
	private float measureADMServiceKPI;
	private float totalProgramManagementHours;
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="ProgramManagementID")
	public Integer getProgramManagementID() {
		return programManagementID;
	}
	public void setProgramManagementID(Integer programManagementID) {
		this.programManagementID = programManagementID;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="SolutionID")
	public Solution getSolution() {
		return solution;
	}
	public void setSolution(Solution solution) {
		this.solution = solution;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="OpportunityScopeID")
	public OpportunityScope getOpportunityScope() {
		return opportunityScope;
	}
	public void setOpportunityScope(OpportunityScope opportunityScope) {
		this.opportunityScope = opportunityScope;
	}
	
	@Column(name="CoordinateProjects")
	public float getCoordinateProjects() {
		return coordinateProjects;
	}
	public void setCoordinateProjects(float coordinateProjects) {
		this.coordinateProjects = coordinateProjects;
	}
	
	@Column(name="EnsureAchievement")
	public float getEnsureAchievement() {
		return ensureAchievement;
	}
	public void setEnsureAchievement(float ensureAchievement) {
		this.ensureAchievement = ensureAchievement;
	}
	
	@Column(name="ManageClient")
	public float getManageClient() {
		return manageClient;
	}
	public void setManageClient(float manageClient) {
		this.manageClient = manageClient;
	}
	
	@Column(name="ManageQualityRiskIssues")
	public float getManageQualityRiskIssues() {
		return manageQualityRiskIssues;
	}
	public void setManageQualityRiskIssues(float manageQualityRiskIssues) {
		this.manageQualityRiskIssues = manageQualityRiskIssues;
	}
	
	@Column(name="MeasureADMServiceKPI")
	public float getMeasureADMServiceKPI() {
		return measureADMServiceKPI;
	}
	public void setMeasureADMServiceKPI(float measureADMServiceKPI) {
		this.measureADMServiceKPI = measureADMServiceKPI;
	}
	
	@Column(name="TotalProgramManagementHours")
	public float getTotalProgramManagementHours() {
		return totalProgramManagementHours;
	}
	public void setTotalProgramManagementHours(float totalProgramManagementHours) {
		this.totalProgramManagementHours = totalProgramManagementHours;
	}
	
	
	
}
