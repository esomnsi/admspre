package com.ericsson.mssp.common.entity;

// Generated Apr 9, 2013 4:00:48 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.SQLInsert;

/**
 * Ftesummary generated by hbm2java
 */

@Entity
@Table(name = "FTESummary", uniqueConstraints = @UniqueConstraint(columnNames = {
		"OpportunityScopeID","SolutionID", "ToDate"}))
/*@SQLInsert(sql = "insert into FTESummary (OpportunityScopeID, SolutionID, FTECount, ToDate)"
		+ " values (?, ?, ?,?) "
		+ "ON DUPLICATE KEY UPDATE OpportunityScopeID=VALUES(OpportunityScopeID),SolutionID=VALUES(SolutionID), FTECount=VALUES(FTECount), ToDate=VALUES(ToDate)")
*/
public class FTESummary implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -1367707884512338924L;
    private Long ftesummaryId;
    private OpportunityScope opportunityScope;
    private Integer solutionId;
     private Float ftecount;
     private Date toDate;


    public FTESummary() {
    }

  
    public FTESummary(OpportunityScope opportunityScope, Integer solutionId,
	    String location, Float ftecount, Date fromDate, Date toDate,
	    boolean isSteadyStateType) {
	this.opportunityScope = opportunityScope;
	this.solutionId = solutionId;
	this.ftecount = ftecount;
	this.toDate = toDate;
   }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "FTESummaryID", unique = true, nullable = false)
    public Long getFtesummaryId() {
	return this.ftesummaryId;
    }

    public void setFtesummaryId(Long ftesummaryId) {
	this.ftesummaryId = ftesummaryId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "OpportunityScopeID", nullable = false)
    public OpportunityScope getOpportunityScope() {
	return this.opportunityScope;
    }

    public void setOpportunityScope(OpportunityScope opportunityScope) {
	this.opportunityScope = opportunityScope;
    }

    @Column(name = "SolutionID")
    public Integer getSolutionId() {
	return this.solutionId;
    }

    public void setSolutionId(Integer solutionId) {
	this.solutionId = solutionId;
    }

   

    @Column(name = "FTECount", precision = 10)
    public Float getFtecount() {
	return this.ftecount;
    }

    public void setFtecount(Float ftecount) {
	this.ftecount = ftecount;
    }

 
    @Temporal(TemporalType.DATE)
    @Column(name = "ToDate", length = 10)
    public Date getToDate() {
	return this.toDate;
    }

    public void setToDate(Date toDate) {
	this.toDate = toDate;
    }

  

}
